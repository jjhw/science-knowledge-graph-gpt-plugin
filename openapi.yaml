openapi: 3.0.0
info:
  title: GraphQL Research API
  description: An API to manage datasets, researchers, and articles using GraphQL.
  version: 1.0.0
servers:
  - url: https://api.stage.datacite.org
paths:
  /graphql:
    post:
      summary: Make a GraphQL query
      operationId: graphql_request
      description: Send a GraphQL query to the server.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLRequest'
      responses:
        '200':
          description: A successful GraphQL response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphQLResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    GraphQLRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: The GraphQL query.
        variables:
          type: object
          description: The variables for the query.
          additionalProperties: true
    GraphQLResponse:
      type: object
      properties:
        data:
          type: object
          description: The result of the query.
          additionalProperties: true
        errors:
          type: array
          description: A list of errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          description: A list of errors that occurred during the request.
          items:
            $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        message:
          type: string
          description: A description of the error.
        locations:
          type: array
          description: The locations of the errors in the query, if available.
          items:
            $ref: '#/components/schemas/ErrorLocation'
        path:
          type: array
          description: The path of the field that caused the error, if available.
          items:
            oneOf:
              - type: string
              - type: integer
    ErrorLocation:
      type: object
      properties:
        line:
          type: integer
          description: The line number of the error.
        column:
          type: integer
          description: The column number of the error.
x-graphql-types:
  - name: Dataset
  - name: Work
  - name: Software
  - name: Organisation
  - name: Person
  - name: Publication
x-graphql-queries:
  - name: Fetch the data and the works linked to the person with ORCID ID 0000-0001-5934-7525
    query: |
      {
        person(id: "https://orcid.org/0000-0001-5934-7525") {
          id
          name
          givenName
          familyName
          citationCount
          works(hasFunder: true) {
            totalCount
            published {
              title
              count
            }
            resourceTypes {
              title
              count
            }
            nodes {
              id
              type
              titles {
                title
              }
              rights {
                rights
              }
              citationCount
            }
          }
        }
      }
  - name: Fetch all the data about the organization with ROR ID 052gg0110
    query: |
        {
          organization(id: "https://ror.org/052gg0110") {
            id
            name
            alternateName
            citationCount
            viewCount
            downloadCount
            works(hasViews: 100, first: 100) {
              totalCount
              published {
                title
                count
              }
              resourceTypes {
                title
                count
              }
              nodes {
                id
                type
                publisher
                publicationYear
                titles {
                  title
                }
                creators {
                  id
                  name
                  affiliation {
                    id
                    name
                  }
                }
                citationCount
                viewCount
                downloadCount
              }
            }
          }
        }
  - name: Fetch 30 dissertations about machine learning
    query: |
      {
        dissertations(query: "machine learning", first: 30) {
          totalCount
          published{
            id
            count
          }
          nodes {
            id
            publicationYear
            publisher
            creators {
              id
              name
            }
            titles {
              title
            }
          }
        }
      }
  - name: Fetch the citations of datasets that use the DOI  10.5061/dryad.234 and the citations of those citations
    query: |
      {
        dataset(id: "https://doi.org/10.5061/dryad.234") {
          id
          titles {
            title
          }
          citationCount
          citations {
            nodes {
              id
              publisher
              titles {
                title
              }
              citationCount
            }
          }
        }
      }
  - name: Fetch  all the types in the GraphQL schema.
    query: |
      { __schema { types { name kind } } }
